h3#languages supported languages

:markdown
  The default stack in roots is [jade](http://jade-lang.com/), [stylus](http://learnboost.github.io/stylus/), and [coffeescript](http://coffeescript.org/). I chose these languages for a few reasons, and I promise all of them were good. If you are unfamiliar with any of these languages, I would strongly urge you to give them a try. They are all well supported, mature, and robust languages that are used widely, and are very terse, clean, and powerful.

  I do however understand that many people do not trust my language choices and have their own preferences. This is totally fine, and there are lots of options out there for you to make roots your own. First, you can write in vanilla html, css, and/or javascript without a problem. Just change the extension on the files to the appropriate one you are after, and everything will still compile out great. You will however lose a lot of the extra power, such as layouts, the css library etc. If you want to generate a project that has vanilla html/css/js from the beginning, you can add the `--basic` flag to your roots new command, like this: `roots new example --basic`.

  I've found that a number of people prefer to write html in a syntax more similar to vanilla html, but without losing the additional templating power that comes with jade. If this is the case for you, a language called [ejs](https://github.com/visionmedia/ejs) is built in to roots by default, and you can see how a project using ejs looks by adding the `--ejs` flag to your roots new command, like this: `roots new example --ejs`. If you are familiar with ruby, ejs is the exact same as erb.

  If writing css with semicolons and brackets is your jam, no worries. You can write css exactly like vanilla css in stylus. Brackets and semicolons are optional, so you can put them in if you want, or skip them. This is one of the things that makes stylus a truly excellent preprocessor.

  If you don't like coffeescript, it's quite easy to simple change the file extension to `.js`. You will lose none of the additional power that comes with coffeescript, which is just great.

  I've also noticed that some people prefer working with haml/sass over jade/stylus. To be honest, they are hardly any different at all. Jade and stylus are slightly more terse if anything, and offer a small bit more power. In addition, the built in [axis css library](/axis) provides a very near match to compass, and covers your ass in terms of vendor prefixes, older browser compatibility, and time-saving abbreviations. If you are so stuck on haml/sass/compass that you simply cannot branch out and try something new though, roots might not be your thing. These three aforementioned libraries are built in ruby, which does not jive too well with node, which roots is built on. If you are looking for a similar system that's built in ruby instead and defaults to haml/sass/compass, I would recommend checking out [middleman](http://middlemanapp.com/).

  Finally, if you have any other languages that you are into, it's easy to extend roots to support any language, although js-based precompilers are the quickest to integrate. Check out the [documentation for plugins](#plugins) for more info.
